version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: appdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"  # API port
      - "9001:9001"  # Console port
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    ports:
      - "9090:9090"
    networks:
      - app-network
    depends_on:
      - facade
      - data-processing-service
      - models-service
      - models-training-service

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - prometheus

  facade:
    build:
      context: ./services/facade
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://admin:admin123@postgres:5432/appdb
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
    networks:
      - app-network
    depends_on:
      - postgres
      - minio

  data-processing-service:
    build:
      context: ./services/data-processing-service
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=postgresql://admin:admin123@postgres:5432/appdb
      - S3_ENDPOINT=http://minio:9000
    networks:
      - app-network
    depends_on:
      - postgres
      - minio

  models-service:
    build:
      context: ./services/models-service
      dockerfile: Dockerfile
    ports:
      - "8002:8000"
    environment:
      - DATABASE_URL=postgresql://admin:admin123@postgres:5432/appdb
    networks:
      - app-network
    depends_on:
      - postgres

  models-training-service:
    build:
      context: ./services/models-training-service
      dockerfile: Dockerfile
    ports:
      - "8003:8000"
    environment:
      - DATABASE_URL=postgresql://admin:admin123@postgres:5432/appdb
    networks:
      - app-network
    depends_on:
      - postgres

volumes:
  postgres_data:
  minio_data:
  grafana_data:

networks:
  app-network:
    driver: bridge